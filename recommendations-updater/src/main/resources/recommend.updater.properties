
# Max batchSize is 500
# Recommended is to keep this low (e.g. 50) to reduce memory consumption of Embeddings API
batchSize = 50

# Check maximum number of threads in used Embedding API deployment
threads   = 4

# Log progress after (roughly) every x seconds
log.progress.interval = 300
# Log how fast specific parts were processed every x batches
log.debug.timing.interval = 400

# Mongo database (to retrieve CHOs/records)
spring.data.mongodb.uri      = [REMOVED]
spring.data.mongodb.database = [REMOVED]

# Solr (to retrieve sets)
zookeeper.url = [REMOVED]
solr.core     = [REMOVED]

# Embeddings API to generate vectors
# If not provided or empty, then records will be only be imported and saved to csv file (for testing purposes)
embedding.api.url    =
# When using GPU timeout can be low (e.g. 10 sec), otherwise it should be very high (e.g. 120 sec)
# If Embedding API is deployed in our Kubernetes cluster, something in the cluster will close the connection after 50
# seconds (see also https://europeana.atlassian.net/browse/EA-3159)
embedding.api.timeout = 10

# Milvus instance and collection to populate with (updated) vectors
# If not provided or empty, then vectors will be saved to csv file (for testing purposes)
milvus.url            =
milvus.port           =
milvus.collection     =
milvus.collectionDescription =
# Generating a partition for each set in Europeana will cause performance loss when querying!
milvus.usePartitions  = false

# File used to save results when milvus.url or embeddings.api.url is not provided
test.file             = recommend_test_output.csv

# if mail.to is left blank no email will be sent
mail.to              =
spring.mail.host     = [REMOVED]
spring.mail.port     = 0
spring.mail.username = [REMOVED]
spring.mail.password = [REMOVED]

